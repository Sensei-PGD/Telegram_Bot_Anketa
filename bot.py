import telebot
from telebot import types
import json

# –°–æ–∑–¥–∞–µ–º —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞ –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–æ–∫–µ–Ω
token = "Your Token"
bot = telebot.TeleBot(token)

survey = [
    {
        "question": "–í–∞—à –ª—é–±–∏–º—ã–π –≤–∏–¥ –æ—Ç–¥—ã—Ö–∞?",
        "answers": {
            "–ê–∫—Ç–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö": 1,
            "–ü–∞—Å—Å–∏–≤–Ω—ã–π –æ—Ç–¥—ã—Ö": -1
        }
    },
    {
        "question": "–ß—Ç–æ –≤—ã –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ –≥–æ–≤–æ—Ä–∏—Ç—å?",
        "answers": {
            "–ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è": 1,
            "–û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è": -1
        }
    },
    {
        "question": "–ß—Ç–æ –≤–∞—Å –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—Ç?",
        "answers": {
            "–î–æ—Å—Ç–∏–∂–µ–Ω–∏—è –¥—Ä—É–≥–∏—Ö –ª—é–¥–µ–π": 1,
            "–û—Ç–¥—ã—Ö –∏ —Ä–µ–ª–∞–∫—Å–∞—Ü–∏—è": -1
        }
    },
    {
        "question": "–ö–∞–∫ –≤—ã –æ—Ç–Ω–æ—Å–∏—Ç–µ—Å—å –∫ –ø–µ—Ä–µ–º–µ–Ω–∞–º?",
        "answers": {
            "–õ—é–±–ª—é –Ω–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏": 1,
            "–ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å": -1
        }
    },
    {
        "question": "–í–∞—à–∞ —Ä–µ–∞–∫—Ü–∏—è –Ω–∞ –Ω–µ—É–¥–∞—á—É?",
        "answers": {
            "–ú–æ—Ç–∏–≤–∞—Ü–∏—è –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å": 1,
            "–£—Ç–æ–º–ª–µ–Ω–∏–µ –∏ —Ä–∞–∑–æ—á–∞—Ä–æ–≤–∞–Ω–∏–µ": -1
        }
    }
]

user_answers = {}


def filter_begin(message):
    words = ["–Ω–∞—á–∞—Ç—å", "–Ω–∞—á–∏–Ω–∞–µ–º", "–ø—Ä–æ–π–¥–µ–º", "–Ω–∞—á–∏–Ω–∞–π", "–ø–æ–µ—Ö–∞–ª–∏", "–ø–æ—à–ª–∏", "–¥–∞–≤–∞–π", "–Ω–∞—á–Ω–µ–º", "–≤–ø–µ—Ä–µ–¥"]
    return any(map(lambda word: word in message.text.lower(), words))


@bot.message_handler(commands=["start"])
def say_start(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç-–∞–Ω–∫–µ—Ç–∞!\n"
                                      "\n–Ø –ë–æ—Ç-–∞–Ω–∫–µ—Ç–∞, –º–æ–≥—É –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –í–∞–º –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Ç–µ—Å—Ç –Ω–∞ —Ç–µ–º—É ¬´–Ø –æ–ø—Ç–∏–º–∏—Å—Ç –∏–ª–∏ –ø–µ—Å—Å–∏–º–∏—Å—Ç?¬ª\n"
                                      "\n –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã üìã:"
                                      "\n/start - –Ω–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥"
                                      "\n/help - —Å–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
                                      "\n/info - –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ—Å—Ç–µ"
                                      "\n/start_test - –Ω–∞—á–∞—Ç—å –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞")


@bot.message_handler(commands=["help"])
def say_help(message):
    bot.send_message(message.chat.id,
                     "\n –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã üìã:"
                     "\n/start - –Ω–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥"
                     "\n/help - —Å–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"
                     "\n/info - –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ—Å—Ç–µ"
                     "\n /start_test - –Ω–∞—á–∞—Ç—å –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /info
@bot.message_handler(commands=["info"])
def say_info(message):
    bot.send_message(message.chat.id, "\n–¢–µ—Å—Ç ¬´–Ø –æ–ø—Ç–∏–º–∏—Å—Ç –∏–ª–∏ –ø–µ—Å—Å–∏–º–∏—Å—Ç?¬ª –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –≤–∞–º —É–∑–Ω–∞—Ç—å –∫ –∫–∞–∫–æ–º—É –≤—ã –æ—Ç–Ω–æ—Å–∏—Ç–µ—Å—å —Ç–∏–ø—É –ª–∏—á–Ω–æ—Å—Ç–∏." 
                                        "\n–ü—Ä–∏–Ω—Ü–∏–ø —Ä–∞–±–æ—Ç—ã —Ç–µ—Å—Ç–∞."
                                        "\n–¢–µ—Å—Ç –∏–º–µ–µ—Ç —à–∫–∞–ª—É –æ—Ç 1 –¥–æ 5 –±–∞–ª–ª–æ–≤, –≥–¥–µ –Ω–∞–∏–º–µ–Ω—å—à–∏–π –±–∞–ª–ª ‚Äì –ø–µ—Å—Å–∏–º–∏—Å—Ç, —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª ‚Äì —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∏ —Å–∞–º—ã–π –≤—ã—Å–æ–∫–∏–π –±–∞–ª–ª ‚Äì –æ–ø—Ç–∏–º–∏—Å—Ç."
                                        "\n–ó–∞ –æ–¥–∏–Ω –≤–æ–ø—Ä–æ—Å –ø—Ä–æ –æ–ø—Ç–∏–º–∏—Å—Ç–∞ –Ω–∞—á–∏—Å–ª—è–µ—Ç—Å—è 1 –±–∞–ª–ª. "
                                        "\n–ó–∞ –æ–¥–∏–Ω –≤–æ–ø—Ä–æ—Å –ø—Ä–æ –ø–µ—Å—Å–∏–º–∏—Å—Ç–∞ –æ—Ç–Ω–∏–º–∞–µ—Ç—Å—è -1 –±–∞–ª–ª.\n"
                                        "\n–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –ø—Ä–æ—Ö–æ–¥–∏—Ç—å –≤—ã –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ /start_test –ª–∏–±–æ –∂–µ –Ω–∞–ø–∏—Å–∞—Ç—å –≤ —á–∞—Ç–µ: –Ω–∞—á–∞—Ç—å, –Ω–∞—á–∏–Ω–∞–µ–º, –ø—Ä–æ–π–¥–µ–º, –Ω–∞—á–∏–Ω–∞–π, –ø–æ–µ—Ö–∞–ª–∏, –ø–æ—à–ª–∏, –¥–∞–≤–∞–π, –Ω–∞—á–Ω–µ–º, –≤–ø–µ—Ä–µ–¥.")


@bot.message_handler(commands=['start_test'])
def start_survey(message):
    chat_id = message.chat.id
    bot.send_message(chat_id, "–ü—Ä–∏–≤–µ—Ç –µ—â—ë —Ä–∞–∑! –•–æ—á–µ—à—å –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç? (–¥–∞/–Ω–µ—Ç)")
    bot.register_next_step_handler(message, handle_start_survey)


@bot.message_handler(func=filter_begin)
def start_survey(message):
    chat_id = message.chat.id
    bot.send_message(chat_id, "–ü—Ä–∏–≤–µ—Ç –µ—â—ë —Ä–∞–∑! –•–æ—á–µ—à—å –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç? (–¥–∞/–Ω–µ—Ç)")
    bot.register_next_step_handler(message, handle_start_survey)


def handle_start_survey(message):
    if message.text.lower() == "–¥–∞":
        user_answers[message.chat.id] = {}
        send_question(message.chat.id)
    elif message.text.lower() == "–Ω–µ—Ç":
        bot.send_message(message.chat.id, "–ù—É –∫–∞–∫ —Ä–µ—à–∏—à—å!")
    else:
        bot.send_message(message.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, —è –≤–∞—Å –Ω–µ –ø–æ–Ω–∏–º–∞—é. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ '–¥–∞' –∏–ª–∏ '–Ω–µ—Ç'")
        bot.register_next_step_handler(message, handle_start_survey)  # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Å–ª–µ–¥—É—é—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –≤–≤–æ–¥–∞


# –û—Ç–ø—Ä–∞–≤–∫–∞ –≤–æ–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
def send_question(chat_id):
    question_number = len(user_answers[chat_id])
    if question_number < len(survey):
        question = survey[question_number]["question"]
        answers = survey[question_number]["answers"]

        markup = types.ReplyKeyboardMarkup(one_time_keyboard=True)
        for answer in answers:
            markup.add(answer)

        bot.send_message(chat_id, question, reply_markup=markup)
        bot.register_next_step_handler_by_chat_id(chat_id, lambda message: handle_user_answer(message, answers))  # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–≤–µ—Ç–∞
    else:
        show_result(chat_id)
        save_results(chat_id, user_answers[chat_id])
        ask_to_repeat(chat_id)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def handle_user_answer(message, answers):
    chat_id = message.chat.id
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ —Ç–æ, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±–∏—Ä–∞–µ—Ç —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –æ—Ç–≤–µ—Ç
    answer = message.text
    if answer not in answers:
        bot.send_message(chat_id, "‚ùï –Ø –Ω–µ –ø–æ–Ω—è–ª –≤–∞—à–µ –¥–µ–π—Å—Ç–≤–∏–µ, –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –µ—â–µ —Ä–∞–∑ –≤–∞—à –≤—ã–±–æ—Ä")
        send_question(chat_id)  # –ü—Ä–∏–≥–ª–∞—à–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤—ã–±—Ä–∞—Ç—å –∏–∑ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –æ—Ç–≤–µ—Ç–∞ –∑–∞–Ω–æ–≤–æ
    else:
        user_answers[chat_id][survey[len(user_answers[chat_id])]["question"]] = answer
        send_question(chat_id)  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å


# –ü–æ–∫–∞–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Ç–µ—Å—Ç–∞
def show_result(chat_id):
    answers_score_optimist = 0
    answers_score_pessimist = 0
    detailed_results = {}

    for question in survey:
        answer = user_answers[chat_id][question["question"]]
        question_score = question["answers"][answer]

        if question_score > 0:
            answers_score_optimist += question_score
        else:
            answers_score_pessimist += abs(question_score)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ –∫–∞–∂–¥–æ–º—É –≤–æ–ø—Ä–æ—Å—É
        detailed_results[question["question"]] = question_score

    result_message = f"–¢—ã –Ω–∞–±—Ä–∞–ª {answers_score_optimist} –±–∞–ª–ª–æ–≤ —É –æ–ø—Ç–∏–º–∏—Å—Ç–∞ –∏ {answers_score_pessimist} –±–∞–ª–ª–æ–≤ —É –ø–µ—Å—Å–∏–º–∏—Å—Ç–∞\n"

    if answers_score_optimist > answers_score_pessimist:
        result_message += "–¢—ã - –æ–ø—Ç–∏–º–∏—Å—Ç! üòä"
        image_path = "Optimist.png"
    elif answers_score_optimist < answers_score_pessimist:
        result_message += "–¢—ã - –ø–µ—Å—Å–∏–º–∏—Å—Ç! üòû"
        image_path = "Pessimist.png"
    else:
        result_message += "–¢—ã - –±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π üòê"
        image_path = "Balanced.png"

    bot.send_photo(chat_id, open(image_path, 'rb'))
    bot.send_message(chat_id, result_message)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –±–æ–ª–µ–µ –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –∫–∞–∂–¥–æ–º—É –≤–æ–ø—Ä–æ—Å—É
    detailed_result_message = "–î–µ—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ –∫–∞–∂–¥–æ–º—É –≤–æ–ø—Ä–æ—Å—É:\n"
    for question, score in detailed_results.items():
        detailed_result_message += f"{question}: {score} –±–∞–ª–ª–æ–≤\n"
    bot.send_message(chat_id, detailed_result_message)

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ (–≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ —Ñ–∞–π–ª)
def save_results(chat_id, answers):
    user_results = {
        "chat_id": chat_id,
        "answers": answers
    }
    with open('user_results.json', 'a') as file:
        json.dump(user_results, file)
        file.write('\n')


# –ó–∞–ø—Ä–æ—Å –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–∞
def ask_to_repeat(chat_id):
    keyboard = types.ReplyKeyboardMarkup(one_time_keyboard=True)
    button_yes = types.KeyboardButton(text="–ü—Ä–æ–π—Ç–∏ –µ—â—ë —Ä–∞–∑ üîÑ")
    button_no = types.KeyboardButton(text="–ù–µ—Ç, –∑–∞–∫–æ–Ω—á–∏—Ç—å üö™")
    button_help = types.KeyboardButton(text="–ú–µ–Ω—é –∫–æ–º–∞–Ω–¥ üìã")
    keyboard.add(button_yes, button_no, button_help)

    bot.send_message(chat_id, "–•–æ—á–µ—à—å –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –µ—â–µ —Ä–∞–∑?", reply_markup=keyboard)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–∞
@bot.message_handler(func=lambda message: True)
def handle_repeat_test(message):
    chat_id = message.chat.id
    text = message.text.lower()
    if text == "–ø—Ä–æ–π—Ç–∏ –µ—â—ë —Ä–∞–∑ üîÑ":
        user_answers[chat_id] = {}  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        send_question(chat_id)  # –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç –∑–∞–Ω–æ–≤–æ
    elif text == "–Ω–µ—Ç, –∑–∞–∫–æ–Ω—á–∏—Ç—å üö™":
        bot.send_message(chat_id, "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞! –î–æ —Å–≤–∏–¥–∞–Ω–∏—è! üëã")
    elif text == "–º–µ–Ω—é –∫–æ–º–∞–Ω–¥ üìã":
        bot.send_message(chat_id, "\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã üìã:"
                                  "\n/start - –Ω–∞—á–∞—Ç—å —Ç–µ—Å—Ç –∑–∞–Ω–æ–≤–æ"
                                  "\n/help - –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥–∞—Ö"
                                  "\n/info - –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ—Å—Ç–µ "
                                  "\n/start_test - –Ω–∞—á–∞—Ç—å –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ —Ç–µ—Å—Ç–∞")
        ask_to_repeat(chat_id)  # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç–µ—Å—Ç–∞ –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    else:
        bot.send_message(chat_id, "–Ø –Ω–µ –ø–æ–Ω–∏–º–∞—é –≤–∞—à–µ–≥–æ –≤—ã–±–æ—Ä–∞, –≤—ã–±–µ—Ä–∏—Ç–µ '–ü—Ä–æ–π—Ç–∏ –µ—â—ë —Ä–∞–∑ üîÑ' –∏–ª–∏ '–ù–µ—Ç, –∑–∞–∫–æ–Ω—á–∏—Ç—å üö™', –∏–ª–∏ –∑–∞–ø—Ä–æ—Å–∏—Ç–µ '–ú–µ–Ω—é –∫–æ–º–∞–Ω–¥ üìã'", reply_markup=ask_to_repeat(chat_id))


bot.polling()
